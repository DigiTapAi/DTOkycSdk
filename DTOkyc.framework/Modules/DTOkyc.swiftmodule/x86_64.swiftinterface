// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4 (swiftlang-1205.0.26.9 clang-1205.0.19.55)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name DTOkyc
@_exported import DTOkyc
import Foundation
import QuartzCore
import Swift
import UIKit
import WebKit
public enum DTEnvironment : Swift.String {
  case PRODUCTION
  case UAT
  case STAGE
  case DEV
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
@_hasMissingDesignatedInitializers open class ConstantNotification {
  public enum NotificationKey {
    public static let DTOkycNotificationKey: Swift.String
  }
  @objc deinit
}
@objc @_inheritsConvenienceInitializers open class DTOkycVC : UIKit.UIViewController {
  public var clientSecret: Swift.String
  public var phoneoremail: Swift.String
  public var clientId: Swift.String
  public var environment: DTOkyc.DTEnvironment!
  @objc override dynamic open func viewDidLoad()
  @objc override dynamic open func viewWillAppear(_ animated: Swift.Bool)
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension DTOkyc.DTEnvironment : Swift.Equatable {}
extension DTOkyc.DTEnvironment : Swift.Hashable {}
extension DTOkyc.DTEnvironment : Swift.RawRepresentable {}
